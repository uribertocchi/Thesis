cor <- corr.test(as.data.frame(t_RNA[,i]),as.data.frame(t_WGBS[,i]),
method="pearson",adjust="none")
pearson[i,2] <- cor$r
pearson[i,3] <- cor$p
}
rownames(pearson) <- pearson$X1
pearson <- pearson[,-1]
pearson <- pearson[order(pearson$X2, decreasing = FALSE), ]  # Top N highest values by group
pearson_correlation_WGBSXRNAseq <- pearson
write.csv(pearson_correlation_WGBSXRNAseq, "pearson_correlation_WGBSXRNAseq.csv")
#Density plots
spearman_densityplot <- plot(density(na.omit(Spearman_correlation_WGBSXRNAseq$X2)))
#Density plots
pearson_densityplot <- plot(density(na.omit(pearson_correlation_WGBSXRNAseq$X2)))
pearson_densityplot <- plot(density(na.omit(pearson_correlation_WGBSXRNAseq$X2)))
#Density plots
Spearman_densityplot <- plot(density(na.omit(Spearman_correlation_WGBSXRNAseq$X2)))
pearson_densityplot <- plot(density(na.omit(pearson_correlation_WGBSXRNAseq$X2)))
#Density plots
Spearman_densityplot <- ggdensity(na.omit(Spearman_correlation_WGBSXRNAseq$X2)))
#Density plots
Spearman_densityplot <- ggdensity(na.omit(Spearman_correlation_WGBSXRNAseq$X2))
Spearman_densityplot
#Density plots
Spearman_densityplot <- ggdensity(na.omit(Spearman_correlation_WGBSXRNAseq$X2)) + labs(x = "DNA Methylation (%)", y = "Gene Exp. RPKM", title = gene_SYMBOL) + theme_bw() + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
#Density plots
Spearman_densityplot <- ggdensity(na.omit(Spearman_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of WGBS*RNAseq spearman correlation') + theme_bw() + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
Spearman_densityplot
pearson_densityplot <- ggdensity(na.omit(pearson_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of WGBS*RNAseq pearson correlation') + theme_bw() + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
pearson_densityplot
#Density plots
Spearman_densityplot <- ggdensity(na.omit(Spearman_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of WGBS*RNAseq spearman correlation') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
pearson_densityplot <- ggdensity(na.omit(pearson_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of WGBS*RNAseq pearson correlation') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
pearson_densityplot
#Density plots
Spearman_densityplot <- ggdensity(na.omit(Spearman_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of WGBS*RNAseq spearman correlation') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
pearson_densityplot <- ggdensity(na.omit(pearson_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of WGBS*RNAseq pearson correlation') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
pearson_densityplot
Spearman_densityplot
#Density plots
Spearman_densityplot <- ggdensity(na.omit(Spearman_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of methylation*expression (spearman)') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
pearson_densityplot <- ggdensity(na.omit(pearson_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of methylation*expression (pearson)') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
Spearman_densityplot
pearson_densityplot
mean(na.omit(pearson_correlation_WGBSXRNAseq$X2)
mean(na.omit(pearson_correlation_WGBSXRNAseq$X2))
mean(na.omit(pearson_correlation_WGBSXRNAseq$X2))
mean(pearson_correlation_WGBSXRNAseq$X2)
mean(na.omit(pearson_correlation_WGBSXRNAseq$X2))
pearson_densityplot <- ggdensity(na.omit(pearson_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of methylation*expression (pearson)') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
library(ggpubr)
pearson_densityplot <- ggdensity(na.omit(pearson_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of methylation*expression (pearson)') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
#Density plots
Spearman_densityplot <- ggdensity(na.omit(Spearman_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of methylation*expression (spearman)') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
Spearman_densityplot
pearson_densityplot
pearson_densityplot
pearson_densityplot <- plot(density(na.omit(pearson_correlation_WGBSXRNAseq$X2)))
pearson_densityplot
pearson_densityplot <- plot(density(na.omit(pearson_correlation_WGBSXRNAseq$X2)))
pearson_densityplot
pearson_densityplot <- ggdensity(na.omit(pearson_correlation_WGBSXRNAseq$X2)) + labs(x = "Correlation r", y = "Density", title = 'Density of methylation*expression (pearson)') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
pearson_densityplot
mean(na.omit(pearson_correlation_WGBSXRNAseq$X2))
median(na.omit(pearson_correlation_WGBSXRNAseq$X2))
library(tidyverse)
library(ggpubr)
library(jtools)
library(stringr)
library(scales)
library(gridExtra)
library(psych)
library(WGCNA)
library(EnsDb.Hsapiens.v86)
ncol(WGBS_data)
colnames(WGBS_data[,1])
colnames(WGBS_data[,2])
colnames(WGBS_data)
colnames(WGBS_data[1,]
colnames(WGBS_data[1,])
colnames(WGBS_data[1,])
colnames(WGBS_data[,1])
WGBS_data[,1]
df <- data.frame(x=WGBS_data, y= WGBS_data[,1])
View(df)
df <- data.frame(WGBS_data[,1])
rownames(df) <- rownames(WGBS_data)
#Density curve of promoters methylation in each sample
s <- lapply(1:ncol(WGBS_data), function(i){
Sample_name <- colnames(WGBS_data)
df <- data.frame(WGBS_data[,i])
rownames(df) <- rownames(WGBS_data)
sp <- ggdensity(na.omit(df)) + labs(x = "DNA Methylation (%)", y = "Frequency", title = Sample_name[i]) + theme_bw() + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
})
grid.arrange(grobs = s, ncol = 5)
ggdensity(na.omit(WGBS_data$`H1 Cell Line`)) + labs(x = "DNA Methylation (%)", y = "Frequency", title = Sample_name[1]) + theme_bw() + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
Sample_name <- colnames(WGBS_data)
ggdensity(na.omit(WGBS_data$`H1 Cell Line`)) + labs(x = "DNA Methylation (%)", y = "Frequency", title = Sample_name[1]) + theme_bw() + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggdensity(na.omit(WGBS_data$`H1 Cell Line`)) + labs(x = "DNA Methylation (%)", y = "Frequency", title = Sample_name[1]) + theme_bw() + theme(axis.text.x=element_blank(),
panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggdensity(na.omit(WGBS_data$`H1 Cell Line`)) + labs(x = "DNA Methylation (%)", y = "Frequency", title = Sample_name[1]) + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggdensity(na.omit(WGBS_data$`H1 Cell Line`)) + labs(x = "DNA Methylation (%)", y = "Frequency", title = Sample_name[1]) + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggdensity(na.omit(WGBS_data$`H1 Cell Line`)) + labs(x = "DNA Methylation (%)", y = "Density", title = Sample_name[1]) + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggdensity(WGBS_data$`H1 Cell Line`) + labs(x = "DNA Methylation (%)", y = "Density", title = Sample_name[1]) + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
WGBS_data$Sample_name[1]
df <- data.frame(WGBS_data[,1])
View(df)
#Density curve of promoters methylation in each sample
s <- lapply(1:ncol(WGBS_data), function(i){
Sample_name <- colnames(WGBS_data)
df <- data.frame(WGBS_data[,i])
rownames(df) <- rownames(WGBS_data)
sp <- ggdensity(na.omit(df$'WGBS_data...1.')) + labs(x = "DNA Methylation (%)", y = "Density", title = Sample_name[i]) + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))})
grid.arrange(grobs = s, ncol = 5)
#Density curve of promoters methylation in each sample
s <- lapply(1:ncol(WGBS_data), function(i){
Sample_name <- colnames(WGBS_data)
df <- data.frame(WGBS_data[,i])
rownames(df) <- rownames(WGBS_data)
sp <- ggdensity(na.omit(df)) + labs(x = "DNA Methylation (%)", y = "Density", title = Sample_name[i]) + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
})
grid.arrange(grobs = s, ncol = 5)
#Density curve of promoters methylation in each sample
s <- lapply(1:ncol(WGBS_data), function(i){
Sample_name <- colnames(WGBS_data)
df <- data.frame(WGBS_data[,i])
rownames(df) <- rownames(WGBS_data)
sp <- ggdensity(na.omit(df[,1])) + labs(x = "DNA Methylation (%)", y = "Density", title = Sample_name[i]) + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
})
grid.arrange(grobs = s, ncol = 5)
#Density curve of gene expression in each sample
s <- lapply(1:ncol(RNAseq_data), function(i){
Sample_name <- colnames(RNAseq_data)
df <- data.frame(RNAseq_data[,i])
rownames(df) <- rownames(RNAseq_data)
sp <- ggdensity(na.omit(df[,1])) + labs(x = "DNA Methylation (%)", y = "Density", title = Sample_name[i]) + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
})
grid.arrange(grobs = s, ncol = 5)
#Density curve of gene expression in each sample
s <- lapply(1:ncol(RNAseq_data), function(i){
Sample_name <- colnames(RNAseq_data)
df <- data.frame(RNAseq_data[,i])
rownames(df) <- rownames(RNAseq_data)
sp <- ggdensity(na.omit(df[,1])) + labs(x = "Gene Expression (RPKM)", y = "Density", title = Sample_name[i]) + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
})
grid.arrange(grobs = s, ncol = 5)
#Density curve of gene expression in each sample
s <- lapply(1:ncol(RNAseq_data), function(i){
Sample_name <- colnames(RNAseq_data)
df <- data.frame(RNAseq_data[,i])
rownames(df) <- rownames(RNAseq_data)
sp <- ggdensity(na.omit(df[,1])) + labs(x = "Gene Expression (RPKM)", y = "Density", title = Sample_name[i]) + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
})
grid.arrange(grobs = s, ncol = 5)
#Density curve of gene expression in each sample
s <- lapply(1:ncol(RNAseq_data), function(i){
Sample_name <- colnames(RNAseq_data)
df <- data.frame(RNAseq_data[,i])
rownames(df) <- rownames(RNAseq_data)
sp <- ggdensity(na.omit(df[,1])) + labs(x = "Gene Expression (RPKM)", y = "Density", title = Sample_name[i]) + yscale('log10') + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
})
grid.arrange(grobs = s, ncol = 5)
#Density curve of gene expression in each sample
s <- lapply(1:ncol(RNAseq_data), function(i){
Sample_name <- colnames(RNAseq_data)
df <- data.frame(RNAseq_data[,i])
rownames(df) <- rownames(RNAseq_data)
sp <- ggdensity(na.omit(df[,1])) + labs(x = "Gene Expression (RPKM)", y = "Density", title = Sample_name[i]) + yscale('log10') + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
})
grid.arrange(grobs = s, ncol = 5)
warnings()
#Density curve of gene expression in each sample
s <- lapply(1:ncol(RNAseq_data), function(i){
Sample_name <- colnames(RNAseq_data)
df <- data.frame(RNAseq_data[,i])
rownames(df) <- rownames(RNAseq_data)
sp <- ggdensity(na.omit(df[,1])) + labs(x = "Gene Expression (RPKM)", y = "Density", title = Sample_name[i]) + yscale('log10') + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
})
grid.arrange(grobs = s, ncol = 5)
#Density curve of gene expression in each sample
s <- lapply(1:ncol(RNAseq_data), function(i){
Sample_name <- colnames(RNAseq_data)
df <- data.frame(RNAseq_data[,i])
rownames(df) <- rownames(RNAseq_data)
sp <- ggdensity(na.omit(df[,1])) + labs(x = "Gene Expression (RPKM)", y = "Density (log2)", title = Sample_name[i]) + yscale('log2') + theme_bw() + theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
})
grid.arrange(grobs = s, ncol = 5)
View(WGBS_data)
#compute into groups by promoter methylation
##1.stem cells
stem_cells <- WGBS_data[,1:10]
View(stem_cells)
organs <- WGBS_data[,c('Gastric',
'Left_Ventricle',
'Psoas_Muscle',
'Right_Atrium',
'Right_Ventricle',
'Sigmoid_Colon',
'Small_Intestine',
'Esophagus')]
organs <- WGBS_data[,c('Gastric',
'Left_Ventricle',
'Psoas_Muscle',
'Right_Atrium',
'Right_Ventricle',
'Sigmoid_Colon',
'Small_Intestine',
'Esophagus')]
organs <- WGBS_data[,c('Gastric',
'Left Ventricle',
'Psoas Muscle',
'Right Atrium',
'Right Ventricle',
'Sigmoid Colon',
'Small Intestine',
'Esophagus')]
View(organs)
Neuro_cells <- WGBS_data[,c('Neurosphere Cultured Cells Cortex Derived'
,'Neurosphere Cultured Cells Ganglionic Eminence Derived'
,'Brain Germinal Matrix'
,'Brain Hippocampus Middle')]
Ovary_Aorta_Psaos <- WGBS_data[,c('Ovary','Aorta','Psaos')]
Ovary_Aorta_Psaos <- WGBS_data[,c('Ovary','Aorta','Psaos Muscle')]
Ovary_Aorta_Psoas <- WGBS_data[,c('Ovary','Aorta','Psoas Muscle')]
Fetal_Intestine_Large <- WGBS_data[,'Fetal Intestine Large']
Liver_Pancreas <- WGBS_data[,c('Adult Liver', 'Pancreas')]
Penis_Foreskin <- WGBS_data[,'Penis Foreskin Keratinocyte Primary Cells skin03']
Foreskin_Keratinocyte <- WGBS_data[,'Penis Foreskin Keratinocyte Primary Cells skin03']
Immune_system <- WGBS_data[,c('Thymus','Spleen','Mobilized CD34 Primary Cells Female'
)]
Fetal_Intestine_Small <- WGBS_data[,'Fetal Intestine Small']
Stem_Cells <- rowMeans(stem_cells)
Stem_Cells
Organs <- rowMeans(organs)
Neuro_cells <- rowMeans(Neuro_cells)
Ovary_Aorta_Psoas <- rowMeans(Ovary_Aorta_Psoas)
Immune_system <- rowMeans(Immune_system)
Liver_Pancreas <- rowMeans(Liver_Pancreas)
Immune_system
Liver_Pancreas
Fetal_Intestine_Large
Fetal_Intestine_Small
Ovary_Aorta_Psoas
rownames(Fetal_Intestine_Large) <- rownames(WGBS_data)
Fetal_Intestine_Large <- WGBS_data[,'Fetal Intestine Large']
Fetal_Intestine_Large
Grouped_WGBS <- data.frame(Stem_Cells, Organs, Neuro_cells, Ovary_Aorta_Psoas, Fetal_Intestine_Large, Fetal_Intestine_Small, Liver_Pancreas, Foreskin_Keratinocyte, Immune_system)
View(Grouped_WGBS)
#compute into groups by promoter methylation
##1.stem cells
Stem_Cells <- WGBS_data[,1:10]
Stem_Cells <- rowMeans(Stem_Cells, na.rm = TRUE)
Organs <- WGBS_data[,c('Gastric',
'Left Ventricle',
'Psoas Muscle',
'Right Atrium',
'Right Ventricle',
'Sigmoid Colon',
'Small Intestine',
'Esophagus')]
Organs <- rowMeans(Organs, na.rm = TRUE)
Neuro_cells <- WGBS_data[,c('Neurosphere Cultured Cells Cortex Derived'
,'Neurosphere Cultured Cells Ganglionic Eminence Derived'
,'Brain Germinal Matrix'
,'Brain Hippocampus Middle')]
Neuro_cells <- rowMeans(Neuro_cells, na.rm = TRUE)
Ovary_Aorta_Psoas <- WGBS_data[,c('Ovary','Aorta','Psoas Muscle')]
Ovary_Aorta_Psoas <- rowMeans(Ovary_Aorta_Psoas, na.rm = TRUE)
Fetal_Intestine_Large <- WGBS_data[,'Fetal Intestine Large']
Fetal_Intestine_Small <- WGBS_data[,'Fetal Intestine Small']
Liver_Pancreas <- WGBS_data[,c('Adult Liver', 'Pancreas')]
Liver_Pancreas <- rowMeans(Liver_Pancreas, na.rm = TRUE)
Foreskin_Keratinocyte <- WGBS_data[,'Penis Foreskin Keratinocyte Primary Cells skin03']
Immune_system <- WGBS_data[,c('Thymus','Spleen','Mobilized CD34 Primary Cells Female')]
Immune_system <- rowMeans(Immune_system, na.rm = TRUE)
Grouped_WGBS <- data.frame(Stem_Cells, Organs, Neuro_cells, Ovary_Aorta_Psoas, Fetal_Intestine_Large, Fetal_Intestine_Small, Liver_Pancreas, Foreskin_Keratinocyte, Immune_system)
write.csv(Grouped_WGBS, 'Grouped_WGBS.csv')
#compute into groups by promoter methylation (By eye according to WGBS heatmap)
Stem_Cells <- WGBS_data[,1:10]
Stem_Cells <- rowMeans(Stem_Cells, na.rm = TRUE)
Organs <- WGBS_data[,c('Gastric',
'Left Ventricle',
'Psoas Muscle',
'Right Atrium',
'Right Ventricle',
'Sigmoid Colon',
'Small Intestine',
'Esophagus')]
Organs <- rowMeans(Organs, na.rm = TRUE)
Neuro_cells <- WGBS_data[,c('Neurosphere Cultured Cells Cortex Derived'
,'Neurosphere Cultured Cells Ganglionic Eminence Derived'
,'Brain Germinal Matrix'
,'Brain Hippocampus Middle')]
Neuro_cells <- rowMeans(Neuro_cells, na.rm = TRUE)
Ovary_Aorta_Psoas <- WGBS_data[,c('Ovary','Aorta','Psoas Muscle')]
Ovary_Aorta_Psoas <- rowMeans(Ovary_Aorta_Psoas, na.rm = TRUE)
Fetal_Intestine_Large <- WGBS_data[,'Fetal Intestine Large']
Fetal_Intestine_Small <- WGBS_data[,'Fetal Intestine Small']
Liver_Pancreas <- WGBS_data[,c('Adult Liver', 'Pancreas')]
Liver_Pancreas <- rowMeans(Liver_Pancreas, na.rm = TRUE)
Foreskin_Keratinocyte <- WGBS_data[,'Penis Foreskin Keratinocyte Primary Cells skin03']
Immune_system <- WGBS_data[,c('Thymus','Spleen','Mobilized CD34 Primary Cells Female')]
Immune_system <- rowMeans(Immune_system, na.rm = TRUE)
Grouped_WGBS <- data.frame(Stem_Cells, Organs, Neuro_cells, Ovary_Aorta_Psoas, Fetal_Intestine_Large, Fetal_Intestine_Small, Liver_Pancreas, Foreskin_Keratinocyte, Immune_system)
write.csv(Grouped_WGBS, 'Grouped_WGBS.csv')
library(plyr)
combos <- combn(ncol(Grouped_WGBS),2)
adply(combos, 2, function(x) {
test <- t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]])
out <- Grouped_WGBS.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
return(out)
})
combos <- combn(ncol(Grouped_WGBS),2)
adply(combos, 2, function(x) {
test <- t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]])
out <- data.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
return(out)
})
combos <- combn(ncol(Grouped_WGBS),2)
adply(combos, 2, function(x) {
test <- pairwise.t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]],p.adj = "bonf")
out <- data.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
return(out)
})
combos <- combn(ncol(Grouped_WGBS),2)
adply(combos, 2, function(x) {
test <- pairwise.t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]],p.adj = "fdr")
out <- data.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
return(out)
})
out
combos <- combn(ncol(Grouped_WGBS),2)
adply(combos, 2, function(x) {
test <- t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]], paired = TRUE)
out <- data.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
return(out)
})
combos <- combn(ncol(Grouped_WGBS),2)
adply(combos, 2, function(x) {
test <- t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]], paired = TRUE)
out <- data.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", p.adjust(test$p.value, method = 'fdr'))
)
return(out)
})
length(Grouped_WGBS)
combos <- combn(ncol(Grouped_WGBS),2)
adply(combos, 2, function(x) {
test <- t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]], paired = TRUE)
out <- data.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
out$p.value <- p.adjust(out$p.value, method = 'fdr', n = 19795)
return(out)
})
combos <- combn(ncol(Grouped_WGBS),2)
adply(combos, 2, function(x) {
test <- t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]], paired = TRUE)
out <- data.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
out$p.value <- p.adjust(out$p.value, method = 'fdr')
return(out)
})
combos <- combn(ncol(Grouped_WGBS),2)
adply(combos, 2, function(x) {
test <- t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]], paired = TRUE)
out <- data.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
return(out)
})
library(apaTables)
install.packages('rempsyc')
library(rempsyc)
nice_table(out,
title = c("Table 1", "T-test of similary-methylated sample groups"),
footnote = c("* p < .05, ** p < .01, *** p < .001"))
out
out <- adply(combos, 2, function(x) {
test <- t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]], paired = TRUE)
out <- data.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
return(out)
})
nice_table(out,
title = c("Table 1", "T-test of similary-methylated sample groups"),
footnote = c("* p < .05, ** p < .01, *** p < .001"))
out <- nice_table(out,
title = c("Table 1", "T-test of similary-methylated sample groups"),
footnote = c("* p < .05, ** p < .01, *** p < .001"))
write.table(out, 'out.pdf')
write.table(out, 'out.csv')
write.table(out, 'out.csv')
out <- nice_table(out,
title = c("Table 1", "T-test of similary-methylated sample groups"),
footnote = c("* p < .05, ** p < .01, *** p < .001"))
out <- nice_table(out,
title = c("Table 1", "T-test of similary-methylated sample groups"),
footnote = c("* p < .05, ** p < .01, *** p < .001"))
nice_table(out,
title = c("Table 1", "T-test of similary-methylated sample groups"),
footnote = c("* p < .05, ** p < .01, *** p < .001"))
nice_table(out,
title = c("Table 1", "T-test of similary-methylated sample groups"),
footnote = c("* p < .05, ** p < .01, *** p < .001"))
combos <- combn(ncol(Grouped_WGBS),2)
out <- adply(combos, 2, function(x) {
test <- t.test(Grouped_WGBS[, x[1]], Grouped_WGBS[, x[2]], paired = TRUE)
out <- data.frame("var1" = colnames(Grouped_WGBS)[x[1]]
, "var2" = colnames(Grouped_WGBS[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
return(out)
})
nice_table(out,
title = c("Table 1", "T-test of similary-methylated sample groups"),
footnote = c("* p < .05, ** p < .01, *** p < .001"))
write.csv(out, 'T-test of similarly-methylated samples')
write.csv(out, 'T-test of similarly-methylated samples.csv')
